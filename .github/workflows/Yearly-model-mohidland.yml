name: Docker

on:
  schedule:
    - cron: '17 2 * * *'
  push:
    branches: [ "master" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "master" ]

env:
  IMAGE_NAME: model/mohidland
  TAG: 24.11
  REPOSITORY: ${{ github.repository }}
  DOCKER_IMAGE_NAME: ghcr.io/${{ github.repository }}/model/mohidland
jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Read Image NAME
        run: echo "The Docker image name is $IMAGE_NAME"
      
      - name: Use Docker image name
        run: echo "The Docker image name is $DOCKER_IMAGE_NAME"
      
      - name: Delete huge unnecessary tools folder
        run: rm -rf /opt/hostedtoolcache
        
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3 #v3.5.0
        with:
          cosign-release: 'v2.2.4'
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # v3.0.0

      - name: Log into registry ghcr.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3 # v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5 # v5.0.0
        with:
          images: ${{ env.DOCKER_IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5 # v5.0.0
        with:
          context: ./
          file: Solutions/dockers/MohidLand/dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.IMAGE_NAME }}:24.11
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ env.IMAGE_NAME }}:${{ env.TAG }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}